===========================
How to use ``0-add_integer.py`` test with txt
===========================


Use of  ``add_integer``
---------------------

Operations
==========
add_integer() returns the sum of 2 arguments.

-----------------
Import File:
	>>> add_integer = __import__('0-add_integer').add_integer
-----------------
Return the sum of two integers:
	>>> add_integer(2, 2)
	4
-----------------
Should return the sum of two integers
	>>> add_integer(12.0, 6)
	18
-----------------
a Must be an integer
	>>> add_integer("hercs", 2)
	Traceback (most recent call last):
    	...
	TypeError: a must be an integer
-----------------
b must be an integer
	>>> add_integer(2, "holbis")
	Traceback (most recent call last):
    	...
	TypeError: b must be an integer
-----------------
b is equal to 98 for default:
	>>> add_integer(13)
	111
-----------------
Should return sum of one `float` and one `int`:
	>>> add_integer(12344.5, 34)
	12378
-----------------
integer bytes
	>>> add_integer(1000000000000000, 10)
	1000000000000010
-----------------
Should return the sum with a negative integer:
    >>> add_integer(-1, 99)
    98
-----------------
Should raise OverFlowError if float is too big:

    >>> add_integer(float('inf'), 1)
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
-----------------
Should not convert NaN (Not a Number) to integer:

    >>> add_integer(float('nan'), 1)
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer
